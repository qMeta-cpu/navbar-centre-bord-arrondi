<!-- Place la balise custom oÃ¹ TU veux dans le flux -->
<x-startup-navbar></x-startup-navbar>

<script type="module">
class StartupNavbar extends HTMLElement {
  constructor(){
    super();
    this._cleanupFns = [];
    this._prevOverflow = '';
  }

  connectedCallback(){
    // ðŸ‘‰ Shadow DOM inline (pas de portal plein Ã©cran)
    const shadow = this.attachShadow({ mode: "open" });
    shadow.innerHTML = `
      <style>
        * { margin: 0; padding: 0; box-sizing: border-box; }

        /* Le composant nâ€™impose plus de background/padding plein Ã©cran */
        :host { display: block; }

        nav {
          background: #fff;
          max-width: 950px;
          margin: 0 auto;               /* centrÃ© */
          padding: 0.8rem 1.5rem;
          border-radius: 12px;
          box-shadow: 0 4px 20px rgba(0,0,0,0.1);
          display: flex;
          justify-content: space-between;
          align-items: center;
          position: relative;
        }

        .logo {
          display: flex;
          align-items: center;
          gap: 0.5rem;
          font-size: 1.25rem;
          font-weight: 700;
          color: #000;
          text-decoration: none;
          z-index: 1001;
        }

        .logo-img{
          width: 24px;
          height: 24px;
          object-fit: contain;
          border-radius: 4px;
          display: block;
        }

        .nav-center { display: flex; align-items: center; gap: 2.5rem; }
        .nav-links { display: flex; gap: 2.5rem; list-style: none; align-items: center; }
        .nav-links a { text-decoration: none; color: #333; font-size: .95rem; font-weight: 500; transition: color .3s; }
        .nav-links a:hover { color: #667eea; }

        .pages-dropdown { position: relative; cursor: pointer; color:#333; font-size:.95rem; font-weight:500; }
        .pages-dropdown::after { content:'â–¼'; margin-left:.3rem; font-size:.7rem; }

        .nav-right { display:flex; align-items:center; gap:1.5rem; }

        .social-icons { display:flex; gap:1rem; }
        .social-icons a { color:#333; font-size:1.2rem; transition: color .3s; text-decoration:none; }
        .social-icons a:hover { color:#667eea; }

        .cta-button {
          background:#000; color:#fff; padding:.7rem 1.5rem; border-radius:12px; text-decoration:none;
          font-weight:600; font-size:.9rem; display:flex; align-items:center; gap:.5rem; transition: background .3s; white-space:nowrap;
        }
        .cta-button:hover { background:#333; }
        .cta-button::before { content:'ðŸ’¬'; font-size:1rem; }

        /* Hamburger */
        .hamburger {
          display:none; flex-direction:column; gap:5px; cursor:pointer; z-index:1001; background:none; border:none; padding:5px;
        }
        .hamburger span { width:25px; height:2.5px; background:#000; border-radius:2px; transition: all .3s ease; }
        .hamburger.active span:nth-child(1){ transform: rotate(45deg) translate(8px, 8px); }
        .hamburger.active span:nth-child(2){ opacity:0; }
        .hamburger.active span:nth-child(3){ transform: rotate(-45deg) translate(7px, -7px); }

        /* Menu mobile & overlay: FIXED au viewport (n'interfÃ¨rent pas tant qu'inactifs) */
        .mobile-menu {
          position: fixed; top: 0; right: -100%; width: 280px; height: 100vh; background: #fff;
          box-shadow: -4px 0 20px rgba(0,0,0,0.1); z-index: 2147483000; transition: right .4s cubic-bezier(.4,0,.2,1);
          padding: 6rem 2rem 2rem; overflow-y: auto;
        }
        .mobile-menu.active { right: 0; }

        .mobile-nav-links { list-style:none; display:flex; flex-direction:column; gap:2rem; margin-bottom:2rem; }
        .mobile-nav-links a { text-decoration:none; color:#333; font-size:1.1rem; font-weight:500; transition: color .3s; }
        .mobile-nav-links a:hover { color:#667eea; }

        .mobile-pages { color:#333; font-size:1.1rem; font-weight:500; cursor:pointer; }
        .mobile-pages::after { content:'â–¼'; margin-left:.5rem; font-size:.8rem; }

        .mobile-social { display:flex; gap:1.5rem; margin-bottom:2rem; padding-top:2rem; border-top:1px solid #eee; }
        .mobile-social a { color:#333; font-size:1.3rem; transition: color .3s; }
        .mobile-social a:hover { color:#667eea; }

        .mobile-cta {
          background:#000; color:#fff; padding:1rem 1.5rem; border-radius:12px; text-decoration:none;
          font-weight:600; font-size:1rem; display:flex; align-items:center; justify-content:center; gap:.5rem; transition: background .3s;
        }
        .mobile-cta:hover { background:#333; }
        .mobile-cta::before { content:'ðŸ’¬'; font-size:1.1rem; }

        .overlay {
          position: fixed; top:0; left:0; width:100%; height:100vh; background: rgba(0,0,0,.6);
          z-index: 2147482999; opacity:0; visibility:hidden; transition: opacity .4s cubic-bezier(.4,0,.2,1), visibility .4s;
          backdrop-filter: blur(2px);
        }
        .overlay.active { opacity:1; visibility:visible; }

        @media (max-width: 968px) {
          nav { padding: 0.8rem 1.2rem; }
          .nav-center, .nav-right { display: none; }
          .hamburger { display: flex; }
        }
        @media (min-width: 969px) {
          .mobile-menu { display: none !important; }
          .overlay { display: none !important; }
        }
      </style>

      <nav part="nav">
        <a href="#" class="logo" part="logo">
          <img
            class="logo-img" part="logo-img"
            src="https://orexlab.com/wp-content/uploads/2025/10/logo.png"
            alt="Orexlab"
          />
          <span>Startup</span>
        </a>

        <div class="nav-center" part="nav-center">
          <ul class="nav-links" part="nav-links">
            <li><a href="#solutions">Solutions</a></li>
            <li><a href="#pricing">Pricing</a></li>
            <li><a href="#about">About</a></li>
            <li class="pages-dropdown"><span>Pages</span></li>
          </ul>
        </div>

        <div class="nav-right" part="nav-right">
          <div class="social-icons" part="social-icons">
            <!-- icÃ´nes sociales -->
          </div>
          <a href="#contact" class="cta-button">Get in Touch</a>
        </div>

        <button class="hamburger" aria-label="Menu">
          <span></span><span></span><span></span>
        </button>
      </nav>

      <div class="overlay"></div>

      <div class="mobile-menu" role="dialog" aria-modal="true" aria-label="Mobile navigation">
        <ul class="mobile-nav-links">
          <li><a href="#solutions">Solutions</a></li>
          <li><a href="#pricing">Pricing</a></li>
          <li><a href="#about">About</a></li>
          <li class="mobile-pages">Pages</li>
        </ul>

        <div class="mobile-social">
          <!-- icÃ´nes sociales -->
        </div>

        <a href="#contact" class="mobile-cta">Get in Touch</a>
      </div>
    `;

    const q = (sel) => shadow.querySelector(sel);
    const hamburger = q('.hamburger');
    const mobileMenu = q('.mobile-menu');
    const overlay = q('.overlay');

    const toggleMenu = () => {
      const isActive = hamburger.classList.contains('active');
      hamburger.classList.toggle('active');
      mobileMenu.classList.toggle('active');
      overlay.classList.toggle('active');
      if (!isActive) {
        this._prevOverflow = document.body.style.overflow;
        document.body.style.overflow = 'hidden';
      } else {
        document.body.style.overflow = this._prevOverflow || '';
      }
    };

    const closeMenu = () => {
      hamburger.classList.remove('active');
      mobileMenu.classList.remove('active');
      overlay.classList.remove('active');
      document.body.style.overflow = this._prevOverflow || '';
    };

    hamburger.addEventListener('click', toggleMenu);
    overlay.addEventListener('click', closeMenu);
    const onEsc = (e) => { if (e.key === 'Escape' && hamburger.classList.contains('active')) closeMenu(); };
    document.addEventListener('keydown', onEsc);

    shadow.querySelectorAll('.mobile-nav-links a, .mobile-cta').forEach(link => {
      const fn = () => closeMenu();
      link.addEventListener('click', fn);
      this._cleanupFns.push(() => link.removeEventListener('click', fn));
    });

    let resizeTimer;
    const onResize = () => {
      clearTimeout(resizeTimer);
      resizeTimer = setTimeout(() => {
        if (window.innerWidth > 968 && hamburger.classList.contains('active')) closeMenu();
      }, 250);
    };
    window.addEventListener('resize', onResize);

    this._cleanupFns.push(
      () => overlay.removeEventListener('click', closeMenu),
      () => document.removeEventListener('keydown', onEsc),
      () => window.removeEventListener('resize', onResize),
      () => hamburger.removeEventListener('click', toggleMenu)
    );
  }

  disconnectedCallback(){
    this._cleanupFns.forEach(fn => { try { fn(); } catch {} });
    this._cleanupFns = [];
    if (this._prevOverflow !== undefined) {
      document.body.style.overflow = this._prevOverflow || '';
    }
  }
}
customElements.define('x-startup-navbar', StartupNavbar);
</script>
